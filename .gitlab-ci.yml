stages:
  - test
  - publish

.python_defaults:
  image: python:3.8-slim

  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

  cache:
    paths:
      - .cache/pip
      - .venv/

  before_script:
    - python -V
    - pip install poetry
    - poetry --version
    - poetry config virtualenvs.in-project true
    - poetry install -vv

test:
  stage: test
  extends: .python_defaults
  script:
    - poetry run pytest
  except:
    - schedules

publish_pypi:
  stage: publish
  extends: .python_defaults
  script:
    - poetry publish --build --username $PYPI_USER --password $PYPI_PASSWORD
  only:
    - master
  except:
    - schedules

publish_docker:
  stage: publish
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind

  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

  script:
    - VERSION=`grep "version.*=.*" pyproject.toml | cut -d\" -f2`
    - docker build -t $CI_REGISTRY_IMAGE:$VERSION -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$VERSION
    - docker push $CI_REGISTRY_IMAGE:latest

  only:
    - master
  except:
    - schedules

scheduled_gitlab_mirror_maker:
  image: registry.gitlab.com/grdl/gitlab-mirror-maker:latest
  script:
    - --no-dry-run
  only:
    - schedules
